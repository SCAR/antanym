% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{an_filter}
\alias{an_filter}
\alias{an_countries}
\alias{an_feature_types}
\alias{an_cga_sources}
\title{Filter a collection of place names by various criteria}
\usage{
an_filter(gaz, query, feature_ids, extent, feature_type, origin_country,
  origin_gazetteer, cga_source)

an_countries(gaz)

an_feature_types(gaz)

an_cga_sources(gaz)
}
\arguments{
\item{gaz}{data.frame or SpatialPointsDataFrame: as returned by \code{\link{an_read}}}

\item{query}{string: return only place names matching this pattern (regular expression)}

\item{feature_ids}{numeric: return only place names associated with the features identified by these identifiers. Currently these values can only be \code{scar_common_id} values}

\item{extent}{raster Extent object or vector of c(longitude_min, longitude_max, latitude_min, latitude_max): if provided, search only for names within this bounding box}

\item{feature_type}{string: return only place names corresponding to feature types matching this pattern (regular expression). For valid feature type names see \code{\link{an_feature_types}}}

\item{origin_country}{string: return only names originating from countries matching this pattern (regular expression). For valid country names see \code{\link{an_countries}}}

\item{origin_gazetteer}{string: return only place names originating from gazetteers matching this pattern (regular expression). For valid gazetteer names see \code{\link{an_gazetteers}}}

\item{cga_source}{string: return only place names in the SCAR Composite Gazetteer originating from contributing gazetteers matching this pattern (regular expression). For valid CGA source gazetteer names see \code{\link{an_cga_sources}}}
}
\value{
data.frame of results
}
\description{
A data.frame of place names can be filtered according to name, geographic location, feature type, or other criteria. All text-related matches are treated as regular expressions and are case-insensitive.
}
\examples{
\dontrun{
 g <- an_read(cache = "session")
 an_filter(g, "Ufs")
 an_filter(g, "Ufs", feature_type = "Island")
 an_filter(g, "Ufs", feature_type = "Island", origin_country = "Australia|United States of America")

 nms <- an_filter(g, extent = c(100, 120, -70, -65),
    origin_country = "Australia")
 with(nms, plot(longitude, latitude))
 with(nms, text(longitude, latitude, place_name))

 ## using pipe operator
 g \%>\% an_filter("Ross", feature_type = "Ice shelf|Mountain")
 g \%>\% an_near(c(100, -66), 20) \%>\% an_filter(feature_type = "Island")

 ## all names for feature 1589 and the country that issued the name
 an_filter(g, feature_ids = 1589)[, c("place_name", "country_name")]
}
}
\references{
\url{http://www.scar.org/data-products/cga}
}
\seealso{
\code{\link{an_gazetteers}}, \code{\link{an_read}}
}
